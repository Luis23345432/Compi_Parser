{
	"info": {
		"_postman_id": "8d9a37de-05bb-46d7-aa0f-2f289b1b9819",
		"name": "LR1 Parser API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38752031",
		"_collection_link": "https://utecdevelopers.postman.co/workspace/Rides_IS~682b2c7d-2d3b-4fd8-b080-fcf876961504/collection/38752031-8d9a37de-05bb-46d7-aa0f-2f289b1b9819?action=share&source=collection_link&creator=38752031"
	},
	"item": [
		{
			"name": "Build",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"grammar\": \"S -> C C\\nC -> c C\\nC -> d\\n\"\n}\n\n"
				},
				"url": {
					"raw": "{{base_url}}/build",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"build"
					]
				},
				"description": "Builds LR(1) states and tables for the given grammar."
			},
			"response": []
		},
		{
			"name": "Parse",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"grammar\": \"S -> C C\\nC -> c C\\nC -> d\\n\",\n\"input\": \"c d d $\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/parse",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parse"
					]
				},
				"description": "Parses the input tokens using the provided grammar. Returns accepted, trace (null for now), and tree ASCII."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"exec": [
					""
				],
				"type": "text/javascript"
			}
		},
		{
			"listen": "test",
			"script": {
				"exec": [
					"pm.test('Status 200', function () { pm.response.to.have.status(200); });"
				],
				"type": "text/javascript"
			}
		}
	]
}